<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:broker="http://activemq.apache.org/schema/core"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- let Spring do its IoC stuff in this package -->
    <context:annotation-config/>
    <context:component-scan base-package="com.sample.apns.server"/>

    <!-- bridge spring property placeholder with Camel -->
    <!-- you must NOT use the <context:property-placeholder at the same time, only this bridge bean -->
    <bean id="bridgePropertyPlaceholder" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:camel.properties</value>
                <value>classpath:service.properties</value>
            </list>
        </property>
    </bean>

    <bean id="configuration" class="com.sample.apns.common.Configuration">
        <property name="serverPort" value="${tcp.port}"/>
        <property name="topicAddress" value="${topic.address}"/>
        <property name="dateTimeFormat" value="${datetime.format}"/>
    </bean>

    <!-- declare a camel context that scans for classes that is RouteBuilder in the package com.sample.apns.server -->
    <camel:camelContext id="camel-server">
        <camel:package>com.sample.apns.server</camel:package>
        <!-- enable JMX connector so we can connect to the server and browse mbeans -->
        <!-- Camel will log at INFO level the service URI to use for connecting with jconsole -->
        <camel:jmxAgent id="agent" createConnector="true"/>
    </camel:camelContext>

    <!-- lets configure the ActiveMQ JMS broker server -->
    <broker:broker useJmx="true" persistent="false" brokerName="myBroker">
        <broker:transportConnectors>
            <!-- expose a VM transport for in-JVM transport between AMQ and Camel on the server side -->
            <broker:transportConnector name="vm" uri="vm://myBroker"/>
            <!-- expose a TCP transport for clients to use -->
            <broker:transportConnector name="tcp" uri="tcp://localhost:${tcp.port}"/>
        </broker:transportConnectors>
    </broker:broker>

    <!-- lets configure the Camel ActiveMQ to use the embedded ActiveMQ broker declared above -->
    <bean id="jmsConnectionFactory"
          class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="vm://myBroker"/>
        <property name="trustAllPackages" value="true"/>
    </bean>

    <bean id="pooledConnectionFactory"
          class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
        <property name="maxConnections" value="8"/>
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <bean id="jmsConfig"
          class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="concurrentConsumers" value="10"/>
    </bean>

    <bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>

        <!-- if we are using transacted then enable CACHE_CONSUMER (if not using XA) to run faster
             see more details at: http://camel.apache.org/jms
        <property name="transacted" value="true"/>
        <property name="cacheLevelName" value="CACHE_CONSUMER" />
        -->
    </bean>
</beans>
